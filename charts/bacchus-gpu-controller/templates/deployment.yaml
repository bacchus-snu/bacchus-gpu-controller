{{- $name := include "bacchus-gpu.fullname" . }}
{{- $ctx := get .Values "controller" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}-controller
  labels:
    {{- include "bacchus-gpu.labels" . | nindent 4 }}
spec:
  replicas: {{ $ctx.replicaCount }}
  selector:
    matchLabels:
      {{- include "bacchus-gpu.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with $ctx.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "bacchus-gpu.selectorLabels" . | nindent 8 }}
    spec:
      {{- with $ctx.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ $name }}-controller
      securityContext:
        {{- toYaml $ctx.podSecurityContext | nindent 8 }}
      containers:
        - name: controller
          securityContext:
            {{- toYaml $ctx.securityContext | nindent 12 }}
          image: "{{ $ctx.image.repository }}:{{ $ctx.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $ctx.image.pullPolicy }}
          command:
            - "/app/controller"
          env:
            - name: RUST_LOG
              value: {{ $ctx.configs.rust_log | quote }}
            - name: CONF_LISTEN_ADDR
              value: "0.0.0.0"
            - name: CONF_LISTEN_PORT
              value: {{ $ctx.service.port | quote }}
          ports:
            - name: http
              containerPort: {{ $ctx.service.port }}
              protocol: TCP
          {{- with $ctx.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $ctx.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml $ctx.resources | nindent 12 }}
      {{- with $ctx.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $ctx.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $ctx.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---

{{- $ctx := get .Values "admission" }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}-admission
  labels:
    {{- include "bacchus-gpu.labels" . | nindent 4 }}
spec:
  replicas: {{ $ctx.replicaCount }}
  selector:
    matchLabels:
      {{- include "bacchus-gpu.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with $ctx.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "bacchus-gpu.selectorLabels" . | nindent 8 }}
    spec:
      {{- with $ctx.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ $name }}-admission
      securityContext:
        {{- toYaml $ctx.podSecurityContext | nindent 8 }}
      containers:
        - name: admission
          securityContext:
            {{- toYaml $ctx.securityContext | nindent 12 }}
          image: "{{ $ctx.image.repository }}:{{ $ctx.image.tag | default $.Chart.AppVersion }}"
          imagePullPolicy: {{ $ctx.image.pullPolicy }}
          command:
            - "/app/admission"
          env:
            - name: RUST_LOG
              value: {{ $ctx.configs.rust_log | quote }}
            - name: CONF_LISTEN_ADDR
              value: "0.0.0.0"
            - name: CONF_LISTEN_PORT
              value: {{ $ctx.service.port | quote }}
            - name: CONF_CERT_PATH
              value: "/cert/tls.crt"
            - name: CONF_KEY_PATH
              value: "/cert/tls.key"
            - name: CONF_OIDC_USERNAME_PREFIX
              value: {{ $ctx.configs.oidc_username_prefix | quote }}
            - name: CONF_DEFAULT_ROLE_NAME
              value: {{ $ctx.configs.default_role_name | quote }}
            - name: CONF_AUTHORIZED_GROUP_NAMES
              value: "{{- include "bacchus-gpu.authorizedGroupNamesWithCommas" . }}"
          volumeMounts:
            - name: cert
              mountPath: /cert
              readOnly: true
          ports:
            - name: http
              containerPort: {{ $ctx.service.port }}
              protocol: TCP
          {{- with $ctx.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $ctx.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml $ctx.resources | nindent 12 }}
      volumes:
        - name: cert
          secret:
            secretName: {{ $name }}-cert
      {{- with $ctx.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $ctx.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $ctx.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
